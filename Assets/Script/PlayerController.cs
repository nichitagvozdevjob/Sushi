using UnityEngine;using UnityEngine.UI;namespace ClearSky{    public class PlayerController : MonoBehaviour    {        public float movePower = 10f;        public float KickBoardMovePower = 15f;        public Text scoreText;        public GameObject hp1;        public GameObject hp2;        public GameObject hp3;        private int _score = 0;        private Rigidbody2D _rb;        private Animator _anim;        private UIManaget _uIManaget;        Vector3 movement;        private int _direction = 1;        private bool _alive = true;        private bool _isKickboard = false;        public int healthPlayer = 3;        void Awake()        {            _rb = GetComponent<Rigidbody2D>();            _anim = GetComponent<Animator>();            _uIManaget = FindObjectOfType<UIManaget>();        }        private void Update()        {            Restart();            if (_alive)            {                KickBoard();                Run();                Damage();            }        }        public void OnTriggerEnter2D(Collider2D other)        {            if (other.gameObject.tag == "CollectiveCube")            {                _score++;                Destroy(other.gameObject);                if (_score < 5)                    scoreText.text = "Score: " + _score;                else                    _uIManaget.Win();            }        }        void KickBoard()        {            if (Input.GetKeyDown(KeyCode.Alpha4) && _isKickboard)            {                _isKickboard = false;                _anim.SetBool("isKickBoard", false);            }            else if (Input.GetKeyDown(KeyCode.Alpha4) && !_isKickboard)            {                _isKickboard = true;                _anim.SetBool("isKickBoard", true);            }        }        void Run()        {            if (!_isKickboard)            {                Vector3 moveVelocity = Vector3.zero;                _anim.SetBool("isRun", false);                if (Input.GetAxisRaw("Horizontal") < 0)                {                    _direction = -1;                    moveVelocity = Vector3.left;                    transform.localScale = new Vector3(_direction, 1, 1);                    if (!_anim.GetBool("isJump"))                        _anim.SetBool("isRun", true);                }                if (Input.GetAxisRaw("Horizontal") > 0)                {                    _direction = 1;                    moveVelocity = Vector3.right;                    transform.localScale = new Vector3(_direction, 1, 1);                    if (!_anim.GetBool("isJump"))                        _anim.SetBool("isRun", true);                }                transform.position += moveVelocity * movePower * Time.deltaTime;            }            if (_isKickboard)            {                Vector3 moveVelocity = Vector3.zero;                if (Input.GetAxisRaw("Horizontal") < 0)                {                    _direction = -1;                    moveVelocity = Vector3.left;                    transform.localScale = new Vector3(_direction, 1, 1);                }                if (Input.GetAxisRaw("Horizontal") > 0)                {                    _direction = 1;                    moveVelocity = Vector3.right;                    transform.localScale = new Vector3(_direction, 1, 1);                }                transform.position += moveVelocity * KickBoardMovePower * Time.deltaTime;            }        }        void Restart()        {            if (Input.GetKeyDown(KeyCode.Alpha0))            {                _isKickboard = false;                _anim.SetBool("isKickBoard", false);                _anim.SetTrigger("idle");                _alive = true;            }        }        public void TakeDamage()        {            healthPlayer--;            if (healthPlayer == 2)            {                Destroy(hp3);            }            if (healthPlayer == 1)            {                Destroy(hp2);            }            if (healthPlayer == 0)            {                Destroy(hp1);            }        }        public void Damage()        {            if (healthPlayer <= 0)            {                if (_uIManaget != null)                {                    _uIManaget.Lose();                    gameObject.SetActive(false);                }            }        }    }}